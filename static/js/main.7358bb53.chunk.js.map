{"version":3,"sources":["components/Search.js","components/Sort.js","components/Control.js","components/TaskForm.js","components/TaskItem.js","components/TaskList.js","App.js","reportWebVitals.js","index.js"],"names":["Search","props","onChange","event","target","name","value","setState","onSearch","state","keyword","this","className","type","placeholder","onClick","Component","Sort","sortBy","sortValue","onSort","id","data-toggle","aria-haspopup","aria-expanded","aria-labelledby","role","Control","TaskForm","onChangeValue","onSubmitValue","preventDefault","alert","onClear","setForm","console","log","status","taskEditing","nextProps","class","onSubmit","required","TaskItem","onUpdateStatus","task","OnDelete","onDelete","onUpdate","index","TaskList","onFilter","filterName","filterStatus","tasks","elmTasks","map","App","onCloseForm","isDisplayForm","randomStringId","Math","floor","random","toString","substring","generateId","onToggleForm","showForm","data","push","findIndex","localStorage","setItem","JSON","stringify","_","result","forEach","splice","parseInt","filter","toLowerCase","getItem","parse","indexOf","sort","a","b","elmTaskForm","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oOA8CeA,E,kDA3CX,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IAKVC,SAAW,SAACC,GACR,IAAIC,EAASD,EAAMC,OACfC,EAAOD,EAAOC,KACdC,EAAQF,EAAOE,MACnB,EAAKC,SAAL,eACKF,EAAMC,KAXI,EAcnBE,SAAW,WACP,EAAKP,MAAMO,SAAS,EAAKC,MAAMC,UAb/B,EAAKD,MAAQ,CACTC,QAAQ,IAHG,E,qDAiBT,IAAD,OACAA,EAAWC,KAAKF,MAAhBC,QACL,OACI,8BACI,qBAAKE,UAAU,sCAAf,SACI,sBAAKA,UAAU,cAAf,UACA,uBAAOC,KAAK,OACJR,KAAK,UACLO,UAAU,eACVN,MAAOI,EACPR,SAAU,SAACC,GAAD,OAAS,EAAKD,SAASC,IACjCW,YAAY,iCACpB,sBAAMF,UAAU,kBAAhB,SACI,yBAAQA,UAAU,kBACVG,QAAS,kBAAI,EAAKP,YACjBK,KAAK,SAFd,UAGA,sBAAMD,UAAU,sBAHhB,yB,GA/BHI,aCmCNC,E,4MAlCXF,QAAQ,SAACG,EAAOC,GACZ,EAAKlB,MAAMmB,OAAOF,EAAOC,I,uDAEnB,IAAD,SACmBR,KAAKV,MAAxBiB,EADA,EACAA,OAAOC,EADP,EACOA,UACZ,OACI,qBAAKP,UAAU,sCAAf,SACI,sBAAKA,UAAU,WAAf,UACA,yBAAQA,UAAU,kCAAkCC,KAAK,SAASQ,GAAG,gBAAgBC,cAAY,WAAWC,gBAAc,OAAOC,gBAAc,OAA/I,+BACY,sBAAMZ,UAAU,sCAE5B,qBAAIA,UAAU,gBAAgBa,kBAAgB,gBAA9C,UACI,oBAAIV,QAAS,kBAAI,EAAKA,QAAQ,OAAO,IAArC,SACI,oBAAGW,KAAK,SAASd,UAAqB,SAATM,GAA6B,IAAZC,EAAc,gBAAgB,GAA5E,UACI,mBAAGP,UAAU,+BADjB,uBAKJ,oBAAIG,QAAS,kBAAI,EAAKA,QAAQ,QAAQ,IAAtC,SACA,oBAAGW,KAAK,SAASd,UAAqB,SAATM,IAA8B,IAAbC,EAAe,gBAAgB,GAA7E,UACI,mBAAGP,UAAU,gCADjB,uBAKA,oBAAIc,KAAK,YAAYd,UAAU,YAC/B,oBAAIG,QAAS,kBAAI,EAAKA,QAAQ,SAAS,IAAvC,SAA2C,mBAAGW,KAAK,SAASd,UAAqB,WAATM,GAA+B,IAAZC,EAAc,gBAAgB,GAA9E,oDAC3C,oBAAIJ,QAAS,kBAAI,EAAKA,QAAQ,UAAU,IAAxC,SAA4C,mBAAGW,KAAK,SAASd,UAAqB,WAATM,IAAgC,IAAbC,EAAe,gBAAgB,GAA/E,sD,GA3B7CH,aCaJW,E,uKATP,OACI,sBAAKf,UAAU,YAAf,UACI,cAAC,EAAD,CAAQJ,SAAUG,KAAKV,MAAMO,WAC7B,cAAC,EAAD,CAAMU,OAAQP,KAAKV,MAAMiB,OAAQC,UAAWR,KAAKV,MAAMkB,UAAWC,OAAQT,KAAKV,MAAMmB,gB,GAL/EJ,aCoGPY,E,kDArGX,WAAY3B,GAAQ,IAAD,8BACf,cAAMA,IAiCV4B,cAAc,SAAC1B,GACX,IAAIC,EAASD,EAAMC,OACfC,EAAOD,EAAOC,KACdC,EAAQF,EAAOE,MACT,WAAPD,IAAiBC,EAAuB,SAAfF,EAAOE,OACnC,EAAKC,SAAL,eACKF,EAAMC,KAxCI,EA2CnBwB,cAAgB,SAAC3B,GACbA,EAAM4B,iBACgB,KAAnB,EAAKtB,MAAMJ,KAEV2B,MAAM,qCAEN,EAAK/B,MAAM6B,cAAc,EAAKrB,OAC9B,EAAKwB,UACL,EAAKhC,MAAMiC,WAEfC,QAAQC,IAAI,EAAK3B,QArDF,EAuDnBwB,QAAU,WACN,EAAK1B,SAAS,CACVF,KAAK,GACLgC,QAAO,IAEX,EAAKpC,MAAMiC,WA1DX,EAAKzB,MAAQ,CACTY,GAAG,GACHhB,KAAK,GACLgC,QAAO,GALI,E,iEASZ1B,KAAKV,MAAMqC,aACV3B,KAAKJ,SAAS,CACVc,GAAGV,KAAKV,MAAMqC,YAAYjB,GAC1BhB,KAAKM,KAAKV,MAAMqC,YAAYjC,KAC5BgC,OAAO1B,KAAKV,MAAMqC,YAAYD,SAGtCF,QAAQC,IAAIzB,KAAKF,S,gDAEK8B,GACnBA,GAAaA,EAAUD,YACtB3B,KAAKJ,SAAS,CACVc,GAAIkB,EAAUD,YAAYjB,GAC1BhB,KAAMkC,EAAUD,YAAYjC,KAC5BgC,OAAQE,EAAUD,YAAYD,SAE5BE,EAAUD,aAChB3B,KAAKJ,SAAS,CACVc,GAAG,GACHhB,KAAK,GACLgC,QAAO,M,+BAkCT,IAAD,OACAhB,EAAMV,KAAKF,MAAXY,GACL,OACI,sBAAKT,UAAU,sBAAf,UACI,sBAAKA,UAAU,gBAAf,UACA,oBAAIA,UAAU,2BAAd,SAA+C,KAALS,EAAQ,uCAAqB,8BACvE,sBAAMN,QAAS,kBAAI,EAAKd,MAAMiC,WAAWtB,UAAU,aAAnD,SAAgE,mBAAG4B,MAAM,6BAEzE,qBAAK5B,UAAU,aAAf,SACA,uBAAM6B,SAAU9B,KAAKmB,cAArB,UACI,sBAAKlB,UAAU,aAAf,UACA,6CACA,uBAAOC,KAAK,OAAOD,UAAU,eACrBP,KAAK,OACLC,MAAOK,KAAKF,MAAMJ,KAClBH,SAAU,SAACC,GAAD,OAAS,EAAK0B,cAAc1B,SAE9C,yDACA,yBAAQS,UAAU,eAAe8B,SAAS,WAClCrC,KAAK,SACLC,MAAOK,KAAKF,MAAM4B,OAClBnC,SAAU,SAACC,GAAD,OAAS,EAAK0B,cAAc1B,IAH9C,UAIY,wBAAQG,OAAO,EAAf,+BACA,wBAAQA,OAAO,EAAf,wBAEZ,uBACA,sBAAKM,UAAU,cAAf,UACA,wBAAQC,KAAK,SAASD,UAAU,kBAAhC,SAAwD,KAALS,EAAQ,qBAAW,YADtE,OAEA,wBAAQN,QAASJ,KAAKsB,QAASpB,KAAK,SAASD,UAAU,iBAAvD,6C,GA5FGI,aCyCR2B,E,4MAxCXC,eAAgB,WACZ,EAAK3C,MAAM2C,eAAe,EAAK3C,MAAM4C,KAAKxB,K,EAE9CyB,SAAW,WACP,EAAK7C,MAAM8C,SAAS,EAAK9C,MAAM4C,KAAKxB,K,EAExC2B,SAAW,WACP,EAAK/C,MAAM+C,SAAS,EAAK/C,MAAM4C,KAAKxB,K,uDAE9B,IAAD,SACaV,KAAKV,MAAlB4C,EADA,EACAA,KAAMI,EADN,EACMA,MACX,OACI,+BACA,6BAAKA,EAAO,IACZ,6BAAKJ,EAAKxC,OACV,oBAAIO,UAAU,eAAd,SACI,sBAAMA,UAAWiC,EAAKR,OAAS,8BAA8B,6BACzDtB,QAAS,kBAAI,EAAK6B,kBADtB,SAGCC,EAAKR,OAAS,oBAAY,cAG/B,qBAAIzB,UAAU,cAAd,UACI,yBACAC,KAAK,SACLD,UAAU,kBACVG,QAAS,kBAAI,EAAKiC,YAHlB,UAKA,sBAAMpC,UAAU,sBALhB,cADJ,OASI,yBAAQG,QAAS,kBAAI,EAAK+B,YAAYjC,KAAK,SAASD,UAAU,iBAA9D,UACA,sBAAMA,UAAU,qBADhB,sB,GAhCOI,aCuDRkC,E,kDArDX,WAAYjD,GAAQ,IAAD,8BACf,cAAMA,IAMVC,SAAW,SAACC,GACR,IAAIC,EAASD,EAAMC,OACfC,EAAOD,EAAOC,KACdC,EAAQF,EAAOE,MACnB,EAAKL,MAAMkD,SAAkB,eAAT9C,EAAuBC,EAAQ,EAAKG,MAAM2C,WAAoB,iBAAT/C,EAAyBC,EAAQ,EAAKG,MAAM4C,cACrH,EAAK9C,SAAL,eACKF,EAAMC,KAXX,EAAKG,MAAM,CACP2C,WAAW,GACXC,cAAc,GAJH,E,qDAgBT,IAAD,OACAC,EAAS3C,KAAKV,MAAdqD,MADA,EAE0B3C,KAAKF,MAA/B2C,EAFA,EAEAA,WAAWC,EAFX,EAEWA,aACZE,EAAWD,EAAME,KAAI,SAACX,EAAKI,GAAN,OAAe,cAAC,EAAD,CAAUD,SAAU,EAAK/C,MAAM+C,SAAUD,SAAU,EAAK9C,MAAM8C,SAAUH,eAAgB,SAACvB,GAAD,OAAM,EAAKpB,MAAM2C,eAAevB,IAAmB4B,MAAOA,EAAOJ,KAAMA,GAA7BA,EAAKxB,OAC/K,OACK,wBAAOT,UAAU,mCAAjB,UACO,gCACI,+BACA,oBAAIA,UAAU,cAAd,iBACA,oBAAIA,UAAU,cAAd,oBACA,oBAAIA,UAAU,cAAd,gCACA,oBAAIA,UAAU,cAAd,yCAGJ,kCACI,+BACA,uBACA,6BACI,uBAAOV,SAAU,SAACC,GAAD,OAAS,EAAKD,SAASC,IAAQG,MAAO8C,EAAY/C,KAAK,aAAaQ,KAAK,OAAOD,UAAU,mBAE/G,6BACI,yBAAQV,SAAU,SAACC,GAAD,OAAS,EAAKD,SAASC,IAAQG,MAAO+C,EAAchD,KAAK,eAAeO,UAAU,eAApG,UACI,wBAAQN,OAAQ,EAAhB,8BACA,wBAAQA,MAAO,EAAf,qBACA,wBAAQA,MAAO,EAAf,oCAGR,0BAEAiD,Y,GA9CDvC,a,wBC6MRyC,E,kDAzMb,WAAYxD,GAAQ,IAAD,8BACjB,cAAMA,IAqBRyD,YAAc,kBAAK,EAAKnD,SAAS,CAACoD,eAAe,EAAMrB,YAAY,QAtBhD,EAuBnBsB,eAAiB,kBAAKC,KAAKC,MAAwB,OAAjB,EAAED,KAAKE,WAAmBC,SAAS,IAAIC,UAAU,IAvBhE,EAwBnBC,WAAY,kBAAM,EAAKN,iBAAiB,IAAK,EAAKA,iBAAmB,EAAKA,iBAAiB,IAAK,EAAKA,iBAAiB,IAAK,EAAKA,kBAxB7G,EAyBnBO,aAAe,WACV,EAAK1D,MAAMkD,eAA4C,OAA3B,EAAKlD,MAAM6B,YAExC,EAAK/B,SAAS,CAACoD,eAAe,EAAKrB,YAAY,OAEjD,EAAK/B,SAAS,CAACoD,eAAgB,EAAKlD,MAAMkD,cAAcrB,YAAY,QA9BnD,EAgCnB8B,SAAW,kBAAK,EAAK7D,SAAS,CAACoD,eAAc,KAhC1B,EAiCnB7B,cAAc,SAACuC,GAAO,IAEff,EAAS,EAAK7C,MAAd6C,MACS,KAAXe,EAAKhD,IACNgD,EAAKhD,GAAK,EAAK6C,aACfZ,EAAMgB,KAAKD,IAIXf,EADY,EAAKiB,UAAUF,EAAKhD,KACnBgD,EAEf,EAAK9D,SAAS,CACZ+C,MAAMA,EACNhB,YAAY,OAEdkC,aAAaC,QAAQ,QAASC,KAAKC,UAAUrB,KAhD5B,EAmDnBV,eAAiB,SAACvB,GAAM,IACjBiC,EAAS,EAAK7C,MAAd6C,MAEDL,EAAQ2B,IAAEL,UAAUjB,GAAM,SAACT,GAC7B,OAAOA,EAAKxB,KAAOA,MAET,IAAT4B,IAEDK,EAAML,GAAOZ,QAAUiB,EAAML,GAAOZ,OACpC,EAAK9B,SAAS,CACZ+C,MAAOA,IAETkB,aAAaC,QAAQ,QAASC,KAAKC,UAAUrB,MA/D9B,EAkEnBiB,UAAY,SAAClD,GAAM,IACZiC,EAAS,EAAK7C,MAAd6C,MACDuB,GAAU,EAOd,OANAvB,EAAMwB,SAAQ,SAACjC,EAAKI,GACfJ,EAAKxB,KAAKA,IAEXwD,EAAS5B,MAGN4B,GA3EU,EA6EnB9B,SAAS,SAAC1B,GAAM,IACTiC,EAAS,EAAK7C,MAAd6C,MACDL,EAAQ,EAAKsB,UAAUlD,IACf,IAAT4B,IAEDK,EAAMyB,OAAO9B,EAAM,GACnB,EAAK1C,SAAS,CACZ+C,MAAOA,IAETkB,aAAaC,QAAQ,QAASC,KAAKC,UAAUrB,KAE/C,EAAKI,eAxFY,EA0FnBV,SAAW,SAAC3B,GAAM,IAGZiB,EAFU,EAAK7B,MAAd6C,MACO,EAAKiB,UAAUlD,IAG3B,EAAKd,SAAS,CACZ+B,YAAYA,IAEd,EAAK8B,YAlGY,EAoGnBjB,SAAW,SAACC,EAAWC,GACrBA,EAAe2B,SAAS3B,EAAa,IACrC,EAAK9C,SAAS,CACZ0E,OAAO,CACL5E,KAAK+C,EAAW8B,cAChB7C,OAAOgB,MAzGM,EA6GnB7C,SAAS,SAACE,GACR,EAAKH,SAAS,CACZG,QAAQA,KA/GO,EAkHnBU,OAAS,SAACF,EAAOC,GACb,EAAKZ,SAAS,CACZW,OAAOA,EACPC,UAAUA,KAnHd,EAAKV,MAAQ,CACX6C,MAAO,GACPK,eAAe,EACfrB,YAAY,KACZ2C,OAAO,CACL5E,KAAK,GACLgC,QAAQ,GAEVnB,OAAO,OACPC,UAAU,GAXK,E,iEAejB,GAAGqD,cAAiBA,aAAaW,QAAQ,SAAS,CAChD,IAAI7B,EAAQoB,KAAKU,MAAMZ,aAAaW,QAAQ,UAC5CxE,KAAKJ,SAAS,CACZ+C,MAAQA,O,+BAwGJ,IAAD,SACiE3C,KAAKF,MAAxE6C,EADE,EACFA,MAAMK,EADJ,EACIA,cAAcrB,EADlB,EACkBA,YAAY2C,EAD9B,EAC8BA,OAAOvE,EADrC,EACqCA,QAAQQ,EAD7C,EAC6CA,OAAOC,EADpD,EACoDA,UAExD8D,IACEA,EAAO5E,OACRiD,EAAQA,EAAM2B,QAAO,SAACpC,GAEpB,OAAyD,IAAlDA,EAAKxC,KAAK6E,cAAcG,QAAQJ,EAAO5E,UAGhDiD,EAAQA,EAAM2B,QAAO,SAACpC,GACpB,OAAoB,IAAjBoC,EAAO5C,OACDQ,EAGAA,EAAKR,UAA4B,IAAhB4C,EAAO5C,YAIpC3B,IACDyB,QAAQC,IAAI1B,GAIZ4C,EAAQsB,IAAEK,OAAO3B,GAAM,SAACT,GACtB,OAAiE,IAA1DA,EAAKxC,KAAK6E,cAAcG,QAAQ3E,EAAQwE,mBAIvC,SAAThE,EACDoC,EAAMgC,MAAK,SAACC,EAAEC,GAEZ,OAAGD,EAAElF,KAAOmF,EAAEnF,KAAac,EACnBoE,EAAElF,KAAOmF,EAAEnF,MAAcc,EACrB,KAGdmC,EAAMgC,MAAK,SAACC,EAAEC,GACd,OAAGD,EAAElD,OAASmD,EAAEnD,QAAgBlB,EACxBoE,EAAElD,OAASmD,EAAEnD,OAAelB,EACxB,KAId,IAAIsE,EAAc9B,EACA,cAAC,EAAD,CAAUrB,YAAaA,EACvBR,cAAenB,KAAKmB,cACpBI,QAAS,kBAAI,EAAKwB,iBAAiB,GACrD,OACE,8BACG,sBAAK9C,UAAU,YAAf,UACD,sBAAKA,UAAU,cAAf,UACI,mEACA,0BAEJ,sBAAKA,UAAU,MAAf,UACA,qBAAKA,UAAW+C,EAAc,sCAAsC,GAApE,SACK8B,IAED,sBAAK7E,UAAW+C,EAAc,sCAAsC,0CAApE,UACI,yBAAQ9C,KAAK,SACLD,UAAU,uBACVG,QAAS,kBAAI,EAAKoD,gBAF1B,UAGI,sBAAMvD,UAAU,oBAHpB,+BAKA,cAAC,EAAD,CAASM,OAAQA,EAAQC,UAAWA,EAAWC,OAAQT,KAAKS,OAAQZ,SAAUG,KAAKH,WACnF,qBAAKI,UAAU,YAAf,SACI,qBAAKA,UAAU,0CAAf,SACE,cAAC,EAAD,CAAUuC,SAAUxC,KAAKwC,SAAUH,SAAUrC,KAAKqC,SAAUM,MAASA,EAAOP,SAAUpC,KAAKoC,SAAUH,eAAgBjC,KAAKiC,oC,GA/L9H5B,aCMH0E,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.7358bb53.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nclass Search extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            keyword:''\r\n        }\r\n    }\r\n    onChange = (event)=>{\r\n        var target = event.target\r\n        var name = target.name\r\n        var value = target.value\r\n        this.setState({\r\n            [name]:value\r\n        })\r\n    }\r\n    onSearch = ()=>{\r\n        this.props.onSearch(this.state.keyword)\r\n    }\r\n    render() {\r\n        var {keyword} = this.state\r\n        return (\r\n            <div>\r\n                <div className=\"col-xs-6 col-sm-6 col-md-6 col-lg-6\">\r\n                    <div className=\"input-group\">\r\n                    <input type=\"text\" \r\n                            name=\"keyword\"\r\n                            className=\"form-control\" \r\n                            value={keyword}\r\n                            onChange={(event)=>this.onChange(event)}\r\n                            placeholder=\"Nhập từ khóa...\" />\r\n                    <span className=\"input-group-btn\">\r\n                        <button className=\"btn btn-primary\"\r\n                                onClick={()=>this.onSearch()}\r\n                                 type=\"button\">\r\n                        <span className=\"fa fa-search mr-5\" />Tìm\r\n                        </button>\r\n                    </span>\r\n                    </div>\r\n                </div>\r\n             </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Search;\r\n","import React, { Component } from 'react';\r\n\r\nclass Sort extends Component {\r\n    onClick=(sortBy,sortValue)=>{\r\n        this.props.onSort(sortBy,sortValue)\r\n    }\r\n    render() {\r\n        var {sortBy,sortValue}= this.props\r\n        return (\r\n            <div className=\"col-xs-6 col-sm-6 col-md-6 col-lg-6\">\r\n                <div className=\"dropdown\">\r\n                <button className=\"btn btn-primary dropdown-toggle\" type=\"button\" id=\"dropdownMenu1\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"true\">\r\n                    Sắp Xếp <span className=\"fa fa-caret-square-o-down ml-5\" />\r\n                </button>\r\n                <ul className=\"dropdown-menu\" aria-labelledby=\"dropdownMenu1\">\r\n                    <li onClick={()=>this.onClick('name',1)}>\r\n                        <a role=\"button\" className={(sortBy==='name'&&sortValue===1?'sort-selected':'')} >\r\n                            <i className=\"fa fa-sort-alpha-asc black\"></i>&nbsp;\r\n                            Tên A-Z\r\n                        </a>\r\n                    </li>\r\n                    <li onClick={()=>this.onClick('name',-1)}>\r\n                    <a role=\"button\" className={(sortBy==='name'&&sortValue===-1?'sort-selected':'')}>\r\n                        <i className=\"fa fa-sort-alpha-desc black\"></i>&nbsp;\r\n                        Tên Z-A\r\n                    </a>\r\n                    </li>\r\n                    <li role=\"separator\" className=\"divider\" />\r\n                    <li onClick={()=>this.onClick('status',1)}><a role=\"button\" className={(sortBy==='status'&&sortValue===1?'sort-selected':'')}>Trạng Thái Kích Hoạt</a></li>\r\n                    <li onClick={()=>this.onClick('status',-1)}><a role=\"button\" className={(sortBy==='status'&&sortValue===-1?'sort-selected':'')}>Trạng Thái Ẩn</a></li>\r\n                </ul>\r\n                </div>\r\n        </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Sort;\r\n","import React, { Component } from 'react';\r\nimport Search from './Search';\r\nimport Sort from './Sort';\r\n\r\nclass Control extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"row mt-15\">\r\n                <Search onSearch={this.props.onSearch}/>\r\n                <Sort sortBy={this.props.sortBy} sortValue={this.props.sortValue} onSort={this.props.onSort}/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Control;\r\n","import React, { Component } from 'react';\r\n\r\nclass TaskForm extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            id:'',\r\n            name:'',\r\n            status:false\r\n        }\r\n    }\r\n    componentWillMount() {\r\n        if(this.props.taskEditing){\r\n            this.setState({\r\n                id:this.props.taskEditing.id,\r\n                name:this.props.taskEditing.name,\r\n                status:this.props.taskEditing.status \r\n            })\r\n        }\r\n        console.log(this.state);\r\n    }\r\n    componentWillReceiveProps(nextProps){\r\n        if(nextProps && nextProps.taskEditing){\r\n            this.setState({\r\n                id: nextProps.taskEditing.id,\r\n                name: nextProps.taskEditing.name,\r\n                status: nextProps.taskEditing.status \r\n            })\r\n        }else if(!nextProps.taskEditing){\r\n            this.setState({\r\n                id:'',\r\n                name:'',\r\n                status:false\r\n            })\r\n        }\r\n      \r\n    }\r\n    onChangeValue=(event)=>{\r\n        var target = event.target;\r\n        var name = target.name;\r\n        var value = target.value;\r\n        if(name==='status')(value = target.value==='true'?true:false)\r\n        this.setState({\r\n            [name]:value\r\n        })\r\n    }\r\n    onSubmitValue = (event)=>{\r\n        event.preventDefault()\r\n        if(this.state.name ==='')\r\n        {\r\n            alert(\"Please!  fill in the information\")\r\n        }else{\r\n            this.props.onSubmitValue(this.state)\r\n            this.onClear()\r\n            this.props.setForm()\r\n        }\r\n        console.log(this.state);\r\n    }\r\n    onClear = ()=>{\r\n        this.setState({\r\n            name:'',\r\n            status:false\r\n        })\r\n        this.props.setForm()\r\n    }\r\n\r\n    render() {\r\n        var {id} = this.state\r\n        return (\r\n            <div className=\"panel panel-warning\">\r\n                <div className=\"panel-heading\">\r\n                <h3 className=\"panel-title inline-block\">{id!==''?'Cập nhật công việc':'Thêm Công việc'}</h3>\r\n                <span onClick={()=>this.props.setForm()} className=\"text-right\"><i class=\"fas fa-times-circle\"></i></span>\r\n                </div>\r\n                <div className=\"panel-body\">\r\n                <form onSubmit={this.onSubmitValue}>\r\n                    <div className=\"form-group\">\r\n                    <label>Tên :</label>\r\n                    <input type=\"text\" className=\"form-control\" \r\n                            name='name' \r\n                            value={this.state.name} \r\n                            onChange={(event)=>this.onChangeValue(event)} />\r\n                    </div>\r\n                    <label>Trạng Thái :</label>\r\n                    <select className=\"form-control\" required=\"required\"\r\n                            name='status' \r\n                            value={this.state.status }\r\n                            onChange={(event)=>this.onChangeValue(event)}>\r\n                                <option value={true}>Kích Hoạt</option>\r\n                                <option value={false}>Ẩn</option>\r\n                    </select>\r\n                    <br />\r\n                    <div className=\"text-center\">\r\n                    <button type=\"submit\" className=\"btn btn-warning\">{id!==''?'Cập nhật':'Thêm'}</button>&nbsp;\r\n                    <button onClick={this.onClear} type=\"button\" className=\"btn btn-danger\">Hủy Bỏ</button>\r\n                    </div>\r\n                </form>\r\n                </div>\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default TaskForm;\r\n","import React, { Component } from 'react';\r\n\r\nclass TaskItem extends Component {\r\n    onUpdateStatus =()=>{\r\n        this.props.onUpdateStatus(this.props.task.id)\r\n    }\r\n    OnDelete = ()=>{\r\n        this.props.onDelete(this.props.task.id)\r\n    }\r\n    onUpdate = ()=>{\r\n        this.props.onUpdate(this.props.task.id)\r\n    }\r\n    render() {\r\n        let {task, index}=this.props;\r\n        return (\r\n            <tr>\r\n            <td>{index +1}</td>\r\n            <td>{task.name}</td>\r\n            <td className=\"text-center \">\r\n                <span className={task.status ? 'label label-success pointer':'label label-danger pointer'}\r\n                    onClick={()=>this.onUpdateStatus()} \r\n                        >\r\n                {task.status ? 'Kích Hoạt':'Ẩn'}\r\n                </span>\r\n            </td>\r\n            <td className=\"text-center\">\r\n                <button \r\n                type=\"button\" \r\n                className=\"btn btn-warning\"\r\n                onClick={()=>this.onUpdate()}\r\n                >\r\n                <span className=\"fa fa-pencil mr-5\" />Sửa\r\n                </button>\r\n                &nbsp;\r\n                <button onClick={()=>this.OnDelete()} type=\"button\" className=\"btn btn-danger\">\r\n                <span className=\"fa fa-trash mr-5\" />Xóa\r\n                </button>\r\n            </td>\r\n            </tr>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TaskItem;\r\n","import React, { Component } from 'react';\r\nimport TaskItem from './TaskItem';\r\n\r\nclass TaskList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state={\r\n            filterName:'',\r\n            filterStatus:-1\r\n        }\r\n    }\r\n    onChange = (event)=>{\r\n        var target = event.target\r\n        var name = target.name\r\n        var value = target.value\r\n        this.props.onFilter(name === 'filterName'? value : this.state.filterName,name === 'filterStatus'? value : this.state.filterStatus)\r\n        this.setState({\r\n            [name]:value\r\n        })\r\n    }\r\n    render() {\r\n        var {tasks} = this.props;\r\n        var {filterName,filterStatus}= this.state\r\n        var elmTasks = tasks.map((task,index)=> <TaskItem onUpdate={this.props.onUpdate} onDelete={this.props.onDelete} onUpdateStatus={(id)=>this.props.onUpdateStatus(id)} key={task.id} index={index} task={task}/>)\r\n        return (\r\n             <table className=\"table table-bordered table-hover\">\r\n                    <thead>\r\n                        <tr>\r\n                        <th className=\"text-center\">STT</th>\r\n                        <th className=\"text-center\">Tên</th>\r\n                        <th className=\"text-center\">Trạng Thái</th>\r\n                        <th className=\"text-center\">Hành Động</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr>\r\n                        <td />\r\n                        <td>\r\n                            <input onChange={(event)=>this.onChange(event)} value={filterName} name=\"filterName\" type=\"text\" className=\"form-control\" />\r\n                        </td>\r\n                        <td>\r\n                            <select onChange={(event)=>this.onChange(event)} value={filterStatus} name=\"filterStatus\" className=\"form-control\">\r\n                                <option value={-1}>Tất Cả</option>\r\n                                <option value={0}>Ẩn</option>\r\n                                <option value={1}>Kích Hoạt</option>\r\n                            </select>\r\n                        </td>\r\n                        <td />\r\n                        </tr>\r\n                      { elmTasks }\r\n                    </tbody>\r\n            </table>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default TaskList;\r\n","import React, { Component } from 'react';\nimport Control from './components/Control';\nimport TaskForm from './components/TaskForm';\nimport TaskList from './components/TaskList';\nimport './App.css';\nimport _ from 'lodash'\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      tasks: [],// id: unique,name,status\n      isDisplayForm: false,\n      taskEditing:null,\n      filter:{\n        name:'',\n        status:-1\n      },\n      sortBy:'name',\n      sortValue:1\n    }\n  }\n  componentWillMount() {\n    if(localStorage &&  localStorage.getItem('tasks')){\n      var tasks = JSON.parse(localStorage.getItem('tasks'))\n      this.setState({\n        tasks : tasks\n      })\n    }\n  }\n  onCloseForm = ()=> this.setState({isDisplayForm: false,taskEditing:null})//đóng mở tasks form\n  randomStringId = ()=> Math.floor((1+Math.random())*0x10000).toString(16).substring(1)//random key\n  generateId= () => this.randomStringId()+'-'+ this.randomStringId() + this.randomStringId()+'-'+ this.randomStringId()+'-'+ this.randomStringId();//create key\n  onToggleForm = ()=> {\n    if(this.state.isDisplayForm && this.state.taskEditing !== null)\n    {\n      this.setState({isDisplayForm: true,taskEditing:null})\n    }else\n    this.setState({isDisplayForm: !this.state.isDisplayForm,taskEditing:null})\n  }//thay đổi form\n  showForm = ()=> this.setState({isDisplayForm:true})\n  onSubmitValue=(data)=>{\n    // console.log(data);\n    var {tasks} = this.state\n    if(data.id ===''){\n      data.id = this.generateId()\n      tasks.push(data)\n    }\n    else{\n      var index = this.findIndex(data.id)\n      tasks[index]=data\n    }\n    this.setState({\n      tasks:tasks,\n      taskEditing:null\n    })\n    localStorage.setItem('tasks', JSON.stringify(tasks))\n  }\n\n  onUpdateStatus = (id)=>{\n    var {tasks} = this.state\n    // var index = this.findIndex(id)\n    var index = _.findIndex(tasks,(task)=>{\n      return task.id === id\n    })\n    if(index!==-1)\n    {\n      tasks[index].status = !tasks[index].status\n      this.setState({\n        tasks: tasks\n      })\n      localStorage.setItem('tasks', JSON.stringify(tasks))\n    }\n  }\n  findIndex = (id)=>{\n    var {tasks} = this.state;\n    var result = -1\n    tasks.forEach((task,index)=>{\n      if(task.id===id)\n      {\n        result = index\n      }\n    })\n    return result\n  }\n  onDelete=(id)=>{\n    var {tasks} = this.state\n    var index = this.findIndex(id)\n    if(index!==-1)\n    {\n      tasks.splice(index,1)\n      this.setState({\n        tasks: tasks\n      })\n      localStorage.setItem('tasks', JSON.stringify(tasks))\n    }\n    this.onCloseForm()\n  }\n  onUpdate = (id)=>{\n    var {tasks} = this.state\n    var index = this.findIndex(id)\n    var taskEditing = tasks[index]\n    // console.log(taskEditing);\n    this.setState({\n      taskEditing:taskEditing\n    })\n    this.showForm()\n  }\n  onFilter = (filterName,filterStatus)=>{\n    filterStatus = parseInt(filterStatus,10)\n    this.setState({\n      filter:{\n        name:filterName.toLowerCase(),\n        status:filterStatus\n      }\n    })\n  }\n  onSearch=(keyword)=>{\n    this.setState({\n      keyword:keyword\n    })\n  }\n  onSort = (sortBy,sortValue)=>{\n      this.setState({\n        sortBy:sortBy,\n        sortValue:sortValue\n      })\n      // console.log(\"STATE\"+this.state.sortBy + this.state.sortValue);\n      // console.log('ONNNNNNN : '+sortBy+\"_\"+sortValue);\n  }\n  render() {\n    var {tasks,isDisplayForm,taskEditing,filter,keyword,sortBy,sortValue} = this.state\n    // console.log(filter);\n    if(filter){//filter === true\n      if(filter.name){//filter.name tồn tại\n        tasks = tasks.filter((task)=>{\n          // console.log(task);\n          return task.name.toLowerCase().indexOf(filter.name) !== -1\n        })\n      }\n        tasks = tasks.filter((task)=>{\n          if(filter.status===-1){\n            return task\n          }else\n          {\n            return task.status === (filter.status===1?true:false)\n          }\n        })\n    }\n    if(keyword){\n      console.log(keyword);\n      // tasks = tasks.filter((task)=>{\n      //   return task.name.toLowerCase().indexOf(keyword) !== -1\n      // })\n      tasks = _.filter(tasks,(task)=>{\n        return task.name.toLowerCase().indexOf(keyword.toLowerCase())!==-1;\n      })\n    }\n  \n    if(sortBy==='name'){\n      tasks.sort((a,b)=>{\n        // console.log(a.name + \" :a--b: \" +b.name +' VALUE: '+sortValue);\n        if(a.name > b.name) return sortValue\n        else if(a.name < b.name) return -sortValue\n        else return 0\n      })\n    }else{\n      tasks.sort((a,b)=>{\n      if(a.status > b.status) return -sortValue;\n      else if(a.status < b.status) return sortValue;\n      else return 0\n       })\n    }\n    // console.log(sortBy+ \"_\"+sortValue);\n    var elmTaskForm = isDisplayForm?\n                      <TaskForm taskEditing={taskEditing} \n                      onSubmitValue={this.onSubmitValue} \n                      setForm={()=>this.onCloseForm()}/>:'';\n    return (\n      <div>\n         <div className=\"container\">\n        <div className=\"text-center\">\n            <h1>Quản Lý Công Việc</h1>\n            <hr/>\n        </div>\n        <div className=\"row\">\n        <div className={isDisplayForm?\"col-xs-4 col-sm-4 col-md-4 col-lg-4\":''}>\n            {elmTaskForm}\n        </div>\n            <div className={isDisplayForm?\"col-xs-8 col-sm-8 col-md-8 col-lg-8\":\"col-xs-12 col-sm-12 col-md-12 col-lg-12\"}>\n                <button type=\"button\" \n                        className=\"btn btn-primary ml-5\"\n                        onClick={()=>this.onToggleForm()}>\n                    <span className=\"fa fa-plus mr-5\"></span>Thêm Công Việc\n                </button>\n                <Control sortBy={sortBy} sortValue={sortValue} onSort={this.onSort} onSearch={this.onSearch}/>\n                <div className=\"row mt-15\">\n                    <div className=\"col-xs-12 col-sm-12 col-md-12 col-lg-12\">\n                      <TaskList onFilter={this.onFilter} onUpdate={this.onUpdate} tasks = {tasks} onDelete={this.onDelete} onUpdateStatus={this.onUpdateStatus}/>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}